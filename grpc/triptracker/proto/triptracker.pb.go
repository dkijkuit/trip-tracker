// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: grpc/triptracker/proto/triptracker.proto

package triptrackerserver

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartAddress       string `protobuf:"bytes,2,opt,name=startAddress,proto3" json:"startAddress,omitempty"`
	DestinationAddress string `protobuf:"bytes,3,opt,name=destinationAddress,proto3" json:"destinationAddress,omitempty"`
	PeopleCount        int32  `protobuf:"varint,5,opt,name=peopleCount,proto3" json:"peopleCount,omitempty"`
	Distance           int32  `protobuf:"varint,4,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP(), []int{0}
}

func (x *Trip) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trip) GetStartAddress() string {
	if x != nil {
		return x.StartAddress
	}
	return ""
}

func (x *Trip) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

func (x *Trip) GetPeopleCount() int32 {
	if x != nil {
		return x.PeopleCount
	}
	return 0
}

func (x *Trip) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type AddTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trip *Trip `protobuf:"bytes,1,opt,name=trip,proto3" json:"trip,omitempty"`
}

func (x *AddTripRequest) Reset() {
	*x = AddTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTripRequest) ProtoMessage() {}

func (x *AddTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTripRequest.ProtoReflect.Descriptor instead.
func (*AddTripRequest) Descriptor() ([]byte, []int) {
	return file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP(), []int{1}
}

func (x *AddTripRequest) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type AddTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added bool `protobuf:"varint,1,opt,name=added,proto3" json:"added,omitempty"`
}

func (x *AddTripResponse) Reset() {
	*x = AddTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTripResponse) ProtoMessage() {}

func (x *AddTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTripResponse.ProtoReflect.Descriptor instead.
func (*AddTripResponse) Descriptor() ([]byte, []int) {
	return file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP(), []int{2}
}

func (x *AddTripResponse) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

type GetTripsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTripsRequest) Reset() {
	*x = GetTripsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripsRequest) ProtoMessage() {}

func (x *GetTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripsRequest.ProtoReflect.Descriptor instead.
func (*GetTripsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP(), []int{3}
}

type GetTripsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trips []*Trip `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *GetTripsResponse) Reset() {
	*x = GetTripsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripsResponse) ProtoMessage() {}

func (x *GetTripsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_triptracker_proto_triptracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripsResponse.ProtoReflect.Descriptor instead.
func (*GetTripsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP(), []int{4}
}

func (x *GetTripsResponse) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

var File_grpc_triptracker_proto_triptracker_proto protoreflect.FileDescriptor

var file_grpc_triptracker_proto_triptracker_proto_rawDesc = []byte{
	0x0a, 0x28, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x54,
	0x72, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x72, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x04, 0x74, 0x72,
	0x69, 0x70, 0x22, 0x27, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x32,
	0x70, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x72, 0x69, 0x70,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_triptracker_proto_triptracker_proto_rawDescOnce sync.Once
	file_grpc_triptracker_proto_triptracker_proto_rawDescData = file_grpc_triptracker_proto_triptracker_proto_rawDesc
)

func file_grpc_triptracker_proto_triptracker_proto_rawDescGZIP() []byte {
	file_grpc_triptracker_proto_triptracker_proto_rawDescOnce.Do(func() {
		file_grpc_triptracker_proto_triptracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_triptracker_proto_triptracker_proto_rawDescData)
	})
	return file_grpc_triptracker_proto_triptracker_proto_rawDescData
}

var file_grpc_triptracker_proto_triptracker_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_grpc_triptracker_proto_triptracker_proto_goTypes = []interface{}{
	(*Trip)(nil),             // 0: Trip
	(*AddTripRequest)(nil),   // 1: AddTripRequest
	(*AddTripResponse)(nil),  // 2: AddTripResponse
	(*GetTripsRequest)(nil),  // 3: GetTripsRequest
	(*GetTripsResponse)(nil), // 4: GetTripsResponse
}
var file_grpc_triptracker_proto_triptracker_proto_depIdxs = []int32{
	0, // 0: AddTripRequest.trip:type_name -> Trip
	0, // 1: GetTripsResponse.trips:type_name -> Trip
	1, // 2: TripService.AddTrip:input_type -> AddTripRequest
	3, // 3: TripService.GetTrips:input_type -> GetTripsRequest
	2, // 4: TripService.AddTrip:output_type -> AddTripResponse
	4, // 5: TripService.GetTrips:output_type -> GetTripsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpc_triptracker_proto_triptracker_proto_init() }
func file_grpc_triptracker_proto_triptracker_proto_init() {
	if File_grpc_triptracker_proto_triptracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_triptracker_proto_triptracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_triptracker_proto_triptracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_triptracker_proto_triptracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_triptracker_proto_triptracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTripsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_triptracker_proto_triptracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTripsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_triptracker_proto_triptracker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_triptracker_proto_triptracker_proto_goTypes,
		DependencyIndexes: file_grpc_triptracker_proto_triptracker_proto_depIdxs,
		MessageInfos:      file_grpc_triptracker_proto_triptracker_proto_msgTypes,
	}.Build()
	File_grpc_triptracker_proto_triptracker_proto = out.File
	file_grpc_triptracker_proto_triptracker_proto_rawDesc = nil
	file_grpc_triptracker_proto_triptracker_proto_goTypes = nil
	file_grpc_triptracker_proto_triptracker_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TripServiceClient is the client API for TripService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TripServiceClient interface {
	AddTrip(ctx context.Context, in *AddTripRequest, opts ...grpc.CallOption) (*AddTripResponse, error)
	GetTrips(ctx context.Context, in *GetTripsRequest, opts ...grpc.CallOption) (*GetTripsResponse, error)
}

type tripServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTripServiceClient(cc grpc.ClientConnInterface) TripServiceClient {
	return &tripServiceClient{cc}
}

func (c *tripServiceClient) AddTrip(ctx context.Context, in *AddTripRequest, opts ...grpc.CallOption) (*AddTripResponse, error) {
	out := new(AddTripResponse)
	err := c.cc.Invoke(ctx, "/TripService/AddTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tripServiceClient) GetTrips(ctx context.Context, in *GetTripsRequest, opts ...grpc.CallOption) (*GetTripsResponse, error) {
	out := new(GetTripsResponse)
	err := c.cc.Invoke(ctx, "/TripService/GetTrips", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TripServiceServer is the server API for TripService service.
type TripServiceServer interface {
	AddTrip(context.Context, *AddTripRequest) (*AddTripResponse, error)
	GetTrips(context.Context, *GetTripsRequest) (*GetTripsResponse, error)
}

// UnimplementedTripServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTripServiceServer struct {
}

func (*UnimplementedTripServiceServer) AddTrip(context.Context, *AddTripRequest) (*AddTripResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTrip not implemented")
}
func (*UnimplementedTripServiceServer) GetTrips(context.Context, *GetTripsRequest) (*GetTripsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrips not implemented")
}

func RegisterTripServiceServer(s *grpc.Server, srv TripServiceServer) {
	s.RegisterService(&_TripService_serviceDesc, srv)
}

func _TripService_AddTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TripServiceServer).AddTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TripService/AddTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TripServiceServer).AddTrip(ctx, req.(*AddTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TripService_GetTrips_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTripsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TripServiceServer).GetTrips(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TripService/GetTrips",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TripServiceServer).GetTrips(ctx, req.(*GetTripsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TripService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TripService",
	HandlerType: (*TripServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTrip",
			Handler:    _TripService_AddTrip_Handler,
		},
		{
			MethodName: "GetTrips",
			Handler:    _TripService_GetTrips_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/triptracker/proto/triptracker.proto",
}
